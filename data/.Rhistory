if(x > 3){
bool = F
}
tot = tot + x
}
cum = cum + tot
}
cum/30000
cum = 0
for(i in 1:30000){
tot = 0
bool = T
while(bool){
x = trunc(runif(1, 1,7))
if(x > 3){
bool = F
}
tot = tot + x
}
cum = cum + tot
}
cum/30000
setwd("~/Desktop/FIN580/data")
file_names=dir(path="~/Desktop/FIN580/data")
currencies = strsplit(file_names[1:(length(file_names)-1)],'USD.csv')
labels = read.csv(file_names[length(file_names)],header = T)
labels[,1] = as.Date(labels[,1])
data = lapply(file_names[1:length(currencies)], function(x) {
temp = read.csv(x ,header = T)
temp = temp[,c("Date","Close")]
temp$Date = as.Date(temp$Date, format = "%m/%d/%y")
return(temp) })
names(data) = currencies
dates = unique(labels[,1])
returns = lapply(data, function(x){
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character()), Returns = numeric())
pos = 1
for(date in dates){
indicies = which(x[,1] == date)
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(date,length(daily_rets)),daily_rets)
pos = pos + len
}
return(tot_rets)
})
origin(data$AUD$Date)
library(lubridate)
lubridate.origin
lubridate::origin
returns = lapply(data, function(x){
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character(),origin = lubridate::origin), Returns = numeric())
pos = 1
for(date in dates){
indicies = which(x[,1] == date)
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(date,length(daily_rets)),daily_rets)
pos = pos + len
}
return(tot_rets)
})
rep(date,length(daily_rets))
x = data$AUD
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character(),origin = lubridate::origin), Returns = numeric())
pos = 1
for(date in dates){
indicies = which(x[,1] == date)
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(date,length(daily_rets)),daily_rets)
pos = pos + len
}
return(tot_rets)
tot_rets
x = data$AUD
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character(),origin = lubridate::origin), Returns = numeric())
pos = 1
#for(date in dates){
date = dates[1]
indicies = which(x[,1] == date)
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(date,length(daily_rets)),daily_rets)
tot_rets
pos = pos + len
date = dates[2]
indicies = which(x[,1] == date)
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(date,length(daily_rets)),daily_rets)
tot_rets
x = data$AUD
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character(),origin = lubridate::origin), Returns = numeric())
pos = 1
for(date in dates){
#date = dates[2]
indicies = which(x[,1] == date)
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(date,length(daily_rets)),daily_rets)
pos = pos + len
}
x = data$AUD
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character(),origin = lubridate::origin), Returns = numeric())
pos = 1
for(date in dates){
#date = dates[2]
print(date)
indicies = which(x[,1] == date)
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(date,length(daily_rets)),daily_rets)
pos = pos + len
}
x = data$AUD
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character(),origin = lubridate::origin), Returns = numeric())
pos = 1
for(i in 1:length(dates)){
#date = dates[2]
print(dates[i])
indicies = which(x[,1] == dates[i])
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(dates[i],length(daily_rets)),daily_rets)
pos = pos + len
}
x = data$AUD
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character(),origin = lubridate::origin), Returns = numeric())
pos = 1
for(i in 1:length(dates)){
#date = dates[2]
print(dates[i])
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(dates[i],length(daily_rets)),daily_rets)
pos = pos + len
}
}
nrow(tot_rets)
get_rets = function(x){
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character()), Returns = numeric())
pos = 1
sapply(1:length(dates), function(x) {
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
print('Hello')
print(pos)
print(nrow(tot_rets))
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(dates[i],length(daily_rets)),daily_rets)
pos <<- pos + len
print(pos)
print(nrow(tot_rets))
return(tot_rets)
}
})
}
returns = lapply(data, get_rets(x))
get_rets = function(x){
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character()), Returns = numeric())
pos = 1
sapply(1:length(dates), function(i) {
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
print('Hello')
print(pos)
print(nrow(tot_rets))
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(dates[i],length(daily_rets)),daily_rets)
pos <<- pos + len
print(pos)
print(nrow(tot_rets))
return(tot_rets)
}
})
}
get_rets = function(x){
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character()), Returns = numeric())
pos = 1
sapply(1:length(dates), function(i) {
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
print('Hello')
print(pos)
print(nrow(tot_rets))
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(dates[i],length(daily_rets)),daily_rets)
pos <<- pos + len
print(pos)
print(nrow(tot_rets))
return(tot_rets)
}
})
}
returns = lapply(data, get_rets(x))
get_rets = function(x){
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character()), Returns = numeric())
pos = 1
sapply(1:length(dates), function(i) {
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
print('Hello')
print(pos)
print(nrow(tot_rets))
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] <<- list(rep(dates[i],length(daily_rets)),daily_rets)
pos <<- pos + len
print(pos)
print(nrow(tot_rets))
return(tot_rets)
}
})
}
#   sapply(dates,function(x){
indicies = which(ts[,1] == x)
daily_prices = ts[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
df = data.frame(rep(x,length(daily_rets)),daily_rets)
colnames(df) = c("Date","Return")
return(df)})}
returns = lapply(data, get_rets(x))
get_rets = function(x){
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character()), Returns = numeric())
pos = 1
for(i in 1:length(dates)){
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(dates[i],length(daily_rets)),daily_rets)
pos = pos + len
}
}
return(tot_rets)
}
returns = lapply(data, get_rets(x))
get_rets = function(x){
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character()), Returns = numeric())
pos = 1
for(i in 1:length(dates)){
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(dates[i],length(daily_rets)),daily_rets)
pos = pos + len
}
}
return(tot_rets)
}
2+2
returns = lapply(data, get_rets(x))
returns = lapply(data, get_rets)
library(lubridate)
file_names=dir(path="~/Desktop/FIN580/data")
currencies = strsplit(file_names[1:(length(file_names)-1)],'USD.csv')
labels = read.csv(file_names[length(file_names)],header = T)
labels[,1] = as.Date(labels[,1], format = "%m/%d/%y", origin = lubridate::origin )
prices = lapply(file_names[1:length(currencies)], function(x) {
temp = read.csv(x ,header = T)
temp = temp[,c("Date","Close")]
temp$Date = as.Date(temp$Date, format = "%m/%d/%y")
return(temp) })
file_names=dir(path="~/Desktop/FIN580/data")
currencies = strsplit(file_names[1:(length(file_names)-1)],'USD.csv')
labels = read.csv(file_names[length(file_names)],header = T)
labels[,1] = as.Date(labels[,1], format = "%m/%d/%y", origin = lubridate::origin )
prices = lapply(file_names[1:length(currencies)], function(x) {
temp = read.csv(x ,header = T)
temp = temp[,c("Date","Close")]
temp$Date = as.Date(temp$Date, format = "%m/%d/%y",origin = lubridate::origin)
return(temp) })
prices = lapply(file_names[1:length(currencies)], function(x) {
temp = read.csv(x ,header = T)
temp = temp[,c("Date","Close")]
temp$Date = as.Date(temp$Date, format = "%m/%d/%y",origin = lubridate::origin)
return(temp) })
labels = read.csv(file_names[length(file_names)],header = T)
labels[,1] = as.Date(labels[,1], format = "%m/%d/%Y", origin = lubridate::origin )
labels = read.csv(file_names[length(file_names)],header = T)
labels[,1] = as.Date(labels[,1], origin = lubridate::origin )
labels = read.csv(file_names[length(file_names)],header = T)
labels[,1] = as.Date(labels[,1], origin = lubridate::origin )
prices = lapply(file_names[1:length(currencies)], function(x) {
temp = read.csv(x ,header = T)
temp = temp[,c("Date","Close")]
temp$Date = as.Date(temp$Date, format = "%m/%d/%Y",origin = lubridate::origin)
return(temp) })
prices = lapply(file_names[1:length(currencies)], function(x) {
temp = read.csv(x ,header = T)
temp = temp[,c("Date","Close")]
if(x == "AUDUSD.csv"){
temp$Date = as.Date(temp$Date, format = "%m/%d/%y",origin = lubridate::origin) #why it has a different format i have no idea
}
else{
temp$Date = as.Date(temp$Date, format = "%m/%d/%Y",origin = lubridate::origin)
}
return(temp) })
install.packages("tidyverse")
library(tidyverse)
setwd("~/Desktop/FIN580/data")
file_names=dir(path="~/Desktop/FIN580/data")
currencies = strsplit(file_names[1:(length(file_names)-1)],'USD.csv')
labels = read_csv(file_names[length(file_names)],header = T)
labels = read_csv(file_names[length(file_names)])
labels
colnames(labels)[1] = "Date"
prices = lapply(file_names[1:length(currencies)], function(x) {
temp = read_csv(x)
temp = temp[,c("Date","Close")]
#if(x == "AUDUSD.csv"){
#  temp$Date = as.Date(temp$Date, format = "%m/%d/%y",origin = lubridate::origin) #why it has a different format i have no idea
#}
#else{
#  temp$Date = as.Date(temp$Date, format = "%m/%d/%Y",origin = lubridate::origin)
#}
return(temp) })
names(prices) = currencies
dates = unique(labels[,1])
?read_csv
col_types(labels)
types(labels)
prices = lapply(file_names[1:length(currencies)], function(x) {
temp = read_csv(x,col_types = "_/-_/-D_/-_/-_/-_/-n")
temp = temp[,c("Date","Close")]
#if(x == "AUDUSD.csv"){
#  temp$Date = as.Date(temp$Date, format = "%m/%d/%y",origin = lubridate::origin) #why it has a different format i have no idea
#}
#else{
#  temp$Date = as.Date(temp$Date, format = "%m/%d/%Y",origin = lubridate::origin)
#}
return(temp) })
names(prices) = currencies
dates = unique(labels[,1])
file_names=dir(path="~/Desktop/FIN580/data")
currencies = strsplit(file_names[1:(length(file_names)-1)],'USD.csv')
colnames(labels)[1] = "Date"
labels = read.csv(file_names[length(file_names)],header = T)
labels[,1] = as.Date(labels[,1], origin = lubridate::origin )
prices = lapply(file_names[1:length(currencies)], function(x) {
temp = read.csv(x ,header = T)
temp = temp[,c("Date","Close")]
if(x == "AUDUSD.csv"){
temp$Date = as.Date(temp$Date, format = "%m/%d/%y",origin = lubridate::origin) #why it has a different format i have no idea
}
else{
temp$Date = as.Date(temp$Date, format = "%m/%d/%Y",origin = lubridate::origin)
}
return(temp) })
names(prices) = currencies
dates = unique(labels[,1])
#compute return series
get_rets = function(x){
tot_rets = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Return")
tot_rets = data.frame(Date=as.Date(character()), Returns = numeric())
pos = 1
for(i in 1:length(dates)){
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(dates[i],length(daily_rets)),daily_rets)
pos = pos + len
}
}
return(tot_rets)
}
returns = lapply(prices, get_rets)
sd(c(1,2,3))
sd(c(1,1,1))
file_names=dir(path="~/Desktop/FIN580/data")
currencies = strsplit(file_names[1:(length(file_names)-1)],'USD.csv')
colnames(labels)[1] = "Date"
labels = read.csv(file_names[length(file_names)],header = T)
labels[,1] = as.Date(labels[,1], origin = lubridate::origin )
colnames(labels)[1] = "Date"
prices = lapply(file_names[1:length(currencies)], function(x) {
temp = read.csv(x ,header = T)
temp = temp[,c("Date","Close")]
if(x == "AUDUSD.csv"){
temp$Date = as.Date(temp$Date, format = "%m/%d/%y",origin = lubridate::origin) #why it has a different format I have no idea
}
else{
temp$Date = as.Date(temp$Date, format = "%m/%d/%Y",origin = lubridate::origin)
}
return(temp) })
names(prices) = currencies
dates = unique(labels[,1])
#compute return series
get_rets = function(x){
tot_rets = data.frame(Date=as.Date(character()), Returns = numeric())
pos = 1
for(i in 1:length(dates)){
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
daily_prices = x[indicies,2]
daily_rets = log(daily_prices[2:length(daily_prices)]/daily_prices[1:(length(daily_prices)-1)])
len = length(daily_rets)
tot_rets[pos:(pos+len-1),] = list(rep(dates[i],length(daily_rets)),daily_rets)
pos = pos + len
}
}
return(tot_rets)
}
returns = lapply(prices, get_rets)
#compute volatility series
get_vols = function(ts){
n = length(ts) /288
sapply(1:n,function(x){log( sqrt(252) * sd(ts[((x-1)*289):(288*x)]))})
}
get_vols = function(x){
vols = data.frame(matrix(nrow = 0, ncol = 2))
colnames(tot_rets) = c("Date","Vol")
vols = data.frame(Date=as.Date(character()), Returns = numeric(), Train = numeric() )
pos = 1
for(i in 1:length(dates)){
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
daily_rets = x[indicies,2]
daily_vol = sqrt(252) * sd(daily_rets)
if(daily_vol != 0){ #get rid of days during which vol is 0
vols[pos,] = list(dates[i],log(daily_vol), labels[which(labels$Date == dates[i]),2])
pos = pos + 1
}
}
}
return(vols)
}
vols = lapply(returns,get_vols)
get_vols = function(x){
vols = data.frame(matrix(nrow = 0, ncol = 2))
colnames(vols) = c("Date","Vol")
vols = data.frame(Date=as.Date(character()), Returns = numeric(), Train = numeric() )
pos = 1
for(i in 1:length(dates)){
indicies = which(x[,1] == dates[i])
if(length(indicies) != 0){
daily_rets = x[indicies,2]
daily_vol = sqrt(252) * sd(daily_rets)
if(daily_vol != 0){ #get rid of days during which vol is 0
vols[pos,] = list(dates[i],log(daily_vol), labels[which(labels$Date == dates[i]),2])
pos = pos + 1
}
}
}
return(vols)
}
vols = lapply(returns,get_vols)
save(vols,file="vols.RData")
?dir
file_names=dir(path="~/Desktop/FIN580/data",pattern = '.csv')
file_names
file_names=dir(path="~/Desktop/FIN580/data")
file_names
file_names=dir(path="~/Desktop/FIN580/data",pattern = '.csv')
file_names
wd
printwd()
printwd
setwd("~/Desktop/FIN580/data")
